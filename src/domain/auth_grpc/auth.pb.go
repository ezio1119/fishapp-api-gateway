// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/interfaces/controllers/auth_grpc/auth.proto

package auth_grpc

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Email                string               `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e7c2dd2e9a5a1d5, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *User) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type CreateReq struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateReq) Reset()         { *m = CreateReq{} }
func (m *CreateReq) String() string { return proto.CompactTextString(m) }
func (*CreateReq) ProtoMessage()    {}
func (*CreateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e7c2dd2e9a5a1d5, []int{1}
}

func (m *CreateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReq.Unmarshal(m, b)
}
func (m *CreateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReq.Marshal(b, m, deterministic)
}
func (m *CreateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReq.Merge(m, src)
}
func (m *CreateReq) XXX_Size() int {
	return xxx_messageInfo_CreateReq.Size(m)
}
func (m *CreateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReq proto.InternalMessageInfo

func (m *CreateReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CreateReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type UpdateReq struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateReq) Reset()         { *m = UpdateReq{} }
func (m *UpdateReq) String() string { return proto.CompactTextString(m) }
func (*UpdateReq) ProtoMessage()    {}
func (*UpdateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e7c2dd2e9a5a1d5, []int{2}
}

func (m *UpdateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReq.Unmarshal(m, b)
}
func (m *UpdateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReq.Marshal(b, m, deterministic)
}
func (m *UpdateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReq.Merge(m, src)
}
func (m *UpdateReq) XXX_Size() int {
	return xxx_messageInfo_UpdateReq.Size(m)
}
func (m *UpdateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReq proto.InternalMessageInfo

func (m *UpdateReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UpdateReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginReq struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginReq) Reset()         { *m = LoginReq{} }
func (m *LoginReq) String() string { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()    {}
func (*LoginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e7c2dd2e9a5a1d5, []int{3}
}

func (m *LoginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginReq.Unmarshal(m, b)
}
func (m *LoginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginReq.Marshal(b, m, deterministic)
}
func (m *LoginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginReq.Merge(m, src)
}
func (m *LoginReq) XXX_Size() int {
	return xxx_messageInfo_LoginReq.Size(m)
}
func (m *LoginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginReq.DiscardUnknown(m)
}

var xxx_messageInfo_LoginReq proto.InternalMessageInfo

func (m *LoginReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LoginReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type ID struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ID) Reset()         { *m = ID{} }
func (m *ID) String() string { return proto.CompactTextString(m) }
func (*ID) ProtoMessage()    {}
func (*ID) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e7c2dd2e9a5a1d5, []int{4}
}

func (m *ID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ID.Unmarshal(m, b)
}
func (m *ID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ID.Marshal(b, m, deterministic)
}
func (m *ID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ID.Merge(m, src)
}
func (m *ID) XXX_Size() int {
	return xxx_messageInfo_ID.Size(m)
}
func (m *ID) XXX_DiscardUnknown() {
	xxx_messageInfo_ID.DiscardUnknown(m)
}

var xxx_messageInfo_ID proto.InternalMessageInfo

func (m *ID) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UserWithToken struct {
	User                 *User      `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	TokenPair            *TokenPair `protobuf:"bytes,2,opt,name=token_pair,json=tokenPair,proto3" json:"token_pair,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UserWithToken) Reset()         { *m = UserWithToken{} }
func (m *UserWithToken) String() string { return proto.CompactTextString(m) }
func (*UserWithToken) ProtoMessage()    {}
func (*UserWithToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e7c2dd2e9a5a1d5, []int{5}
}

func (m *UserWithToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserWithToken.Unmarshal(m, b)
}
func (m *UserWithToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserWithToken.Marshal(b, m, deterministic)
}
func (m *UserWithToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserWithToken.Merge(m, src)
}
func (m *UserWithToken) XXX_Size() int {
	return xxx_messageInfo_UserWithToken.Size(m)
}
func (m *UserWithToken) XXX_DiscardUnknown() {
	xxx_messageInfo_UserWithToken.DiscardUnknown(m)
}

var xxx_messageInfo_UserWithToken proto.InternalMessageInfo

func (m *UserWithToken) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserWithToken) GetTokenPair() *TokenPair {
	if m != nil {
		return m.TokenPair
	}
	return nil
}

type TokenPair struct {
	IdToken              string   `protobuf:"bytes,1,opt,name=id_token,json=idToken,proto3" json:"id_token,omitempty"`
	RefreshToken         string   `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenPair) Reset()         { *m = TokenPair{} }
func (m *TokenPair) String() string { return proto.CompactTextString(m) }
func (*TokenPair) ProtoMessage()    {}
func (*TokenPair) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e7c2dd2e9a5a1d5, []int{6}
}

func (m *TokenPair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenPair.Unmarshal(m, b)
}
func (m *TokenPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenPair.Marshal(b, m, deterministic)
}
func (m *TokenPair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenPair.Merge(m, src)
}
func (m *TokenPair) XXX_Size() int {
	return xxx_messageInfo_TokenPair.Size(m)
}
func (m *TokenPair) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenPair.DiscardUnknown(m)
}

var xxx_messageInfo_TokenPair proto.InternalMessageInfo

func (m *TokenPair) GetIdToken() string {
	if m != nil {
		return m.IdToken
	}
	return ""
}

func (m *TokenPair) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "auth_grpc.User")
	proto.RegisterType((*CreateReq)(nil), "auth_grpc.CreateReq")
	proto.RegisterType((*UpdateReq)(nil), "auth_grpc.UpdateReq")
	proto.RegisterType((*LoginReq)(nil), "auth_grpc.LoginReq")
	proto.RegisterType((*ID)(nil), "auth_grpc.ID")
	proto.RegisterType((*UserWithToken)(nil), "auth_grpc.UserWithToken")
	proto.RegisterType((*TokenPair)(nil), "auth_grpc.TokenPair")
}

func init() {
	proto.RegisterFile("src/interfaces/controllers/auth_grpc/auth.proto", fileDescriptor_4e7c2dd2e9a5a1d5)
}

var fileDescriptor_4e7c2dd2e9a5a1d5 = []byte{
	// 558 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x53, 0xdd, 0x6e, 0xd3, 0x4c,
	0x10, 0x95, 0xdd, 0x34, 0xad, 0x27, 0x5f, 0xfb, 0x49, 0xdb, 0x42, 0x82, 0x51, 0x21, 0x0a, 0x5c,
	0x04, 0x89, 0xd8, 0xc8, 0x95, 0x02, 0x95, 0x2a, 0xa4, 0x98, 0x20, 0x14, 0xd1, 0x0b, 0x64, 0x5a,
	0x90, 0x40, 0x10, 0x36, 0xf6, 0x24, 0x59, 0xe1, 0x64, 0xcd, 0x7a, 0xdd, 0xaa, 0x20, 0x9e, 0x83,
	0x7b, 0x1e, 0xb3, 0x57, 0xc8, 0xeb, 0x9f, 0x86, 0x84, 0x1f, 0x09, 0xa9, 0x77, 0xbb, 0x3b, 0x67,
	0xce, 0x39, 0xe3, 0x39, 0x06, 0x3b, 0x16, 0xbe, 0xcd, 0xe6, 0x12, 0xc5, 0x98, 0xfa, 0x18, 0xdb,
	0x3e, 0x9f, 0x4b, 0xc1, 0xc3, 0x10, 0x45, 0x6c, 0xd3, 0x44, 0x4e, 0x87, 0x13, 0x11, 0xf9, 0xea,
	0x64, 0x45, 0x82, 0x4b, 0x4e, 0x8c, 0xf2, 0xd5, 0xac, 0x9f, 0xd2, 0x90, 0x05, 0x54, 0xa2, 0x5d,
	0x1c, 0x32, 0x8c, 0x79, 0x7b, 0xc2, 0xf9, 0x24, 0x44, 0x5b, 0xdd, 0x46, 0xc9, 0xd8, 0x96, 0x6c,
	0x86, 0xb1, 0xa4, 0xb3, 0x28, 0x07, 0xdc, 0x5a, 0x06, 0x9c, 0x09, 0x1a, 0x45, 0x28, 0xe2, 0xbc,
	0x7e, 0x73, 0xb9, 0x8e, 0xb3, 0x48, 0x9e, 0x67, 0xc5, 0xd6, 0x77, 0x0d, 0x2a, 0x27, 0x31, 0x0a,
	0xb2, 0x0d, 0x3a, 0x0b, 0x1a, 0x5a, 0x53, 0x6b, 0xaf, 0x79, 0x3a, 0x0b, 0xc8, 0x2e, 0xac, 0xe3,
	0x8c, 0xb2, 0xb0, 0xa1, 0x37, 0xb5, 0xb6, 0xe1, 0x65, 0x17, 0x72, 0x00, 0xe0, 0x0b, 0xa4, 0x12,
	0x83, 0x21, 0x95, 0x8d, 0xb5, 0xa6, 0xd6, 0xae, 0x39, 0xa6, 0x95, 0x09, 0x58, 0x85, 0x80, 0x75,
	0x5c, 0x38, 0xf4, 0x8c, 0x1c, 0xdd, 0x93, 0x69, 0x6b, 0x12, 0x05, 0x45, 0x6b, 0xe5, 0xef, 0xad,
	0x39, 0xba, 0x27, 0x5b, 0x23, 0x30, 0x9e, 0x28, 0x1e, 0x0f, 0x3f, 0x91, 0xbd, 0xc2, 0x58, 0xea,
	0xd5, 0x70, 0x37, 0x2e, 0xdc, 0x8a, 0xd0, 0x3f, 0x68, 0x85, 0xc3, 0x2e, 0x6c, 0x46, 0x34, 0x8e,
	0xcf, 0xb8, 0x08, 0x32, 0xeb, 0xae, 0x79, 0xe1, 0xd6, 0xc5, 0x35, 0x67, 0xe7, 0xfd, 0xdb, 0x5e,
	0xe7, 0x0d, 0xed, 0x7c, 0x7e, 0xd0, 0x39, 0x78, 0xf7, 0xa5, 0x7b, 0xff, 0xa1, 0xf3, 0xf5, 0xae,
	0x57, 0x62, 0x53, 0x8d, 0x13, 0x25, 0x78, 0x85, 0x1a, 0x14, 0x36, 0x8f, 0xf8, 0x84, 0xcd, 0xaf,
	0x50, 0x62, 0x0f, 0xf4, 0x41, 0x9f, 0xd4, 0x2f, 0x97, 0xa9, 0x98, 0x5b, 0x7a, 0x5b, 0x4b, 0xb7,
	0xda, 0x62, 0xb0, 0x95, 0x6e, 0xfb, 0x35, 0x93, 0xd3, 0x63, 0xfe, 0x11, 0xe7, 0xe4, 0x0e, 0x54,
	0x92, 0x18, 0x85, 0xc2, 0xd6, 0x9c, 0xff, 0xad, 0x32, 0x90, 0x56, 0x8a, 0xf3, 0x54, 0x91, 0xec,
	0x03, 0xc8, 0x14, 0x3d, 0x8c, 0x28, 0x13, 0xca, 0x4e, 0xcd, 0xd9, 0x5d, 0x80, 0x2a, 0xaa, 0x17,
	0x94, 0x09, 0xcf, 0x90, 0xc5, 0xb1, 0xf5, 0x1c, 0x8c, 0xf2, 0x9d, 0xdc, 0x80, 0x4d, 0x16, 0x0c,
	0x55, 0x31, 0x1b, 0xd8, 0xdb, 0x60, 0x41, 0xe1, 0x60, 0x4b, 0xe0, 0x58, 0x60, 0x3c, 0xcd, 0xeb,
	0x59, 0xe0, 0xfe, 0xcb, 0x1f, 0x15, 0xc8, 0xf9, 0xb6, 0x06, 0xb5, 0x5e, 0x22, 0xa7, 0x2f, 0x51,
	0x9c, 0x32, 0x1f, 0xc9, 0x23, 0xa8, 0x66, 0x89, 0x20, 0x8b, 0x3e, 0xca, 0x90, 0x98, 0x8d, 0xa5,
	0x41, 0x2e, 0x07, 0xbe, 0x07, 0x1b, 0xcf, 0x50, 0xba, 0xe7, 0x83, 0x3e, 0xd9, 0x5a, 0x00, 0x0d,
	0xfa, 0xe6, 0xf2, 0xf0, 0xc4, 0x86, 0x6a, 0x16, 0x89, 0x9f, 0x44, 0xca, 0x94, 0xac, 0x36, 0x1c,
	0x42, 0xb5, 0x8f, 0x21, 0x4a, 0x24, 0xd7, 0x57, 0x82, 0xfd, 0x34, 0xfd, 0xe9, 0xcc, 0xd5, 0xc0,
	0xbb, 0x9c, 0x87, 0xaf, 0x68, 0x98, 0x20, 0xe9, 0xc2, 0xba, 0x4a, 0x07, 0xd9, 0x59, 0xe0, 0x2d,
	0xf2, 0xf2, 0x87, 0x89, 0x0e, 0xa1, 0x7a, 0xc4, 0x27, 0x3c, 0x91, 0xff, 0xa4, 0xfa, 0x18, 0xb6,
	0xbd, 0xec, 0x4b, 0x0f, 0xfa, 0x19, 0xdf, 0xef, 0x58, 0x7e, 0xb9, 0xf1, 0x51, 0x55, 0xa1, 0xf6,
	0x7f, 0x04, 0x00, 0x00, 0xff, 0xff, 0x33, 0xda, 0x9b, 0x73, 0xfc, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthServiceClient is the client API for AuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthServiceClient interface {
	Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*UserWithToken, error)
	GetByID(ctx context.Context, in *ID, opts ...grpc.CallOption) (*User, error)
	Update(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*User, error)
	Delete(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*wrappers.BoolValue, error)
	Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*UserWithToken, error)
	Logout(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*wrappers.BoolValue, error)
	RefreshIDToken(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TokenPair, error)
}

type authServiceClient struct {
	cc *grpc.ClientConn
}

func NewAuthServiceClient(cc *grpc.ClientConn) AuthServiceClient {
	return &authServiceClient{cc}
}

func (c *authServiceClient) Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*UserWithToken, error) {
	out := new(UserWithToken)
	err := c.cc.Invoke(ctx, "/auth_grpc.AuthService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) GetByID(ctx context.Context, in *ID, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/auth_grpc.AuthService/GetByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) Update(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/auth_grpc.AuthService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) Delete(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*wrappers.BoolValue, error) {
	out := new(wrappers.BoolValue)
	err := c.cc.Invoke(ctx, "/auth_grpc.AuthService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*UserWithToken, error) {
	out := new(UserWithToken)
	err := c.cc.Invoke(ctx, "/auth_grpc.AuthService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) Logout(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*wrappers.BoolValue, error) {
	out := new(wrappers.BoolValue)
	err := c.cc.Invoke(ctx, "/auth_grpc.AuthService/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) RefreshIDToken(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TokenPair, error) {
	out := new(TokenPair)
	err := c.cc.Invoke(ctx, "/auth_grpc.AuthService/RefreshIDToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServiceServer is the server API for AuthService service.
type AuthServiceServer interface {
	Create(context.Context, *CreateReq) (*UserWithToken, error)
	GetByID(context.Context, *ID) (*User, error)
	Update(context.Context, *UpdateReq) (*User, error)
	Delete(context.Context, *empty.Empty) (*wrappers.BoolValue, error)
	Login(context.Context, *LoginReq) (*UserWithToken, error)
	Logout(context.Context, *empty.Empty) (*wrappers.BoolValue, error)
	RefreshIDToken(context.Context, *empty.Empty) (*TokenPair, error)
}

// UnimplementedAuthServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServiceServer struct {
}

func (*UnimplementedAuthServiceServer) Create(ctx context.Context, req *CreateReq) (*UserWithToken, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedAuthServiceServer) GetByID(ctx context.Context, req *ID) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByID not implemented")
}
func (*UnimplementedAuthServiceServer) Update(ctx context.Context, req *UpdateReq) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedAuthServiceServer) Delete(ctx context.Context, req *empty.Empty) (*wrappers.BoolValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedAuthServiceServer) Login(ctx context.Context, req *LoginReq) (*UserWithToken, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedAuthServiceServer) Logout(ctx context.Context, req *empty.Empty) (*wrappers.BoolValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}
func (*UnimplementedAuthServiceServer) RefreshIDToken(ctx context.Context, req *empty.Empty) (*TokenPair, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefreshIDToken not implemented")
}

func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

func _AuthService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth_grpc.AuthService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Create(ctx, req.(*CreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_GetByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).GetByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth_grpc.AuthService/GetByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).GetByID(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth_grpc.AuthService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Update(ctx, req.(*UpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth_grpc.AuthService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Delete(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth_grpc.AuthService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Login(ctx, req.(*LoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth_grpc.AuthService/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Logout(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_RefreshIDToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).RefreshIDToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth_grpc.AuthService/RefreshIDToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).RefreshIDToken(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth_grpc.AuthService",
	HandlerType: (*AuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _AuthService_Create_Handler,
		},
		{
			MethodName: "GetByID",
			Handler:    _AuthService_GetByID_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _AuthService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _AuthService_Delete_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _AuthService_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _AuthService_Logout_Handler,
		},
		{
			MethodName: "RefreshIDToken",
			Handler:    _AuthService_RefreshIDToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/interfaces/controllers/auth_grpc/auth.proto",
}
