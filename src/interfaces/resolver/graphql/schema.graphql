scalar Time

type Query {
  posts(in: GetPostListInput): [Post!]!
  post(id: ID!): Post!
  user(id: ID!): User!
}

type Mutation {
  createUser(in: CreateUserInput!): UserWithToken!
  updateUser(in: UpdateUserInput!): User! # トークン必須
  deleteUser: Boolean! # トークン必須
  login(in: LoginInput!): UserWithToken!
  logout: Boolean! # リフレッシュトークン必須
  refreshIDToken: TokenPair! # リフレッシュトークン必須
  createPost(in: CreatePostInput!): Post! # トークン必須 
  updatePost(in: UpdatePostInput!): Post! # トークン必須 
  deletePost(id: ID!): Boolean! # トークン必須
}

type User {
  id: ID!
  email: String!
  created_at: Time!
  updated_at: Time!
}

type UserWithToken {
  user: User!
  tokenPair: TokenPair!
}

type TokenPair {
  idToken: String!
  refreshToken: String!
}

input CreateUserInput {
  email: String!
  password: String!
}

input UpdateUserInput {
  email: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}

type Post {
  id: ID!
  title: String!
  content: String!
  user_id: ID!
  created_at: Time!
  updated_at: Time!
}

input CreatePostInput {
  title: String!
  content: String!
}

input UpdatePostInput{
  id: ID!
  title: String!
  content: String!
}

input GetPostListInput{
  num: Int!
  datetime: Time!
}
