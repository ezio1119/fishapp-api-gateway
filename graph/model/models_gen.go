// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type AddMemberChatRoomInput struct {
	RoomID int64 `json:"roomId"`
}

type AddMemberChatRoomPayload struct {
	Member *RoomMember `json:"member"`
}

type ApplyPost struct {
	ID        int64     `json:"id"`
	UserID    int64     `json:"userId"`
	PostID    int64     `json:"postId"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
}

type ChatRoom struct {
	ID        int64     `json:"id"`
	PostID    int64     `json:"postId"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
}

type CreateApplyPostInput struct {
	PostID int64 `json:"postId"`
}

type CreateApplyPostPayload struct {
	ApplyPost *ApplyPost `json:"applyPost"`
}

type CreateChatRoomInput struct {
	PostID int64 `json:"postId"`
}

type CreateChatRoomPayload struct {
	Room *ChatRoom `json:"room"`
}

type CreatePostInput struct {
	Title   string `json:"title"`
	Content string `json:"content"`
}

type CreatePostPayload struct {
	Post *Post `json:"post"`
}

type CreateProfileInput struct {
	Name string `json:"name"`
}

type CreateProfilePayload struct {
	Profile *Profile `json:"profile"`
}

type CreateUserInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type CreateUserPayload struct {
	User      *User      `json:"user"`
	TokenPair *TokenPair `json:"tokenPair"`
}

type DeleteApplyPostInput struct {
	ApplyPostID int64 `json:"applyPostId"`
}

type DeleteApplyPostPayload struct {
	Success bool `json:"success"`
}

type DeletePostInput struct {
	ID int64 `json:"id"`
}

type DeletePostPayload struct {
	Success bool `json:"success"`
}

type DeleteProfilePayload struct {
	Success bool `json:"success"`
}

type DeleteUserPayload struct {
	Success bool `json:"success"`
}

type LoginInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type LoginPayload struct {
	User      *User      `json:"user"`
	TokenPair *TokenPair `json:"tokenPair"`
}

type LogoutPayload struct {
	Success bool `json:"success"`
}

type MessageAddedInput struct {
	RoomIds []int64 `json:"roomIds"`
}

type MessageAddedPayload struct {
	Message *RoomMessage `json:"message"`
}

type PageInfo struct {
	HasNextPage bool    `json:"hasNextPage"`
	EndCursor   *string `json:"endCursor"`
}

type Post struct {
	ID        int64     `json:"id"`
	Title     string    `json:"title"`
	Content   string    `json:"content"`
	UserID    int64     `json:"userId"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
}

type PostConnection struct {
	PageInfo *PageInfo `json:"pageInfo"`
	Nodes    []*Post   `json:"nodes"`
}

type PostsInput struct {
	NotImplement *string `json:"notImplement"`
}

type Profile struct {
	ID        int64     `json:"id"`
	Name      string    `json:"name"`
	UserID    int64     `json:"userId"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type RefreshIDTokenPayload struct {
	TokenPair *TokenPair `json:"tokenPair"`
}

type RoomMember struct {
	ID        int64     `json:"id"`
	RoomID    int64     `json:"roomId"`
	UserID    int64     `json:"userId"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
}

type RoomMessage struct {
	ID        int64     `json:"id"`
	Body      string    `json:"body"`
	RoomID    int64     `json:"roomId"`
	UserID    int64     `json:"userId"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
}

type SendMessageChatRoomInput struct {
	Body   string `json:"body"`
	RoomID int64  `json:"roomId"`
}

type SendMessageChatRoomPayload struct {
	Message *RoomMessage `json:"message"`
}

type TokenPair struct {
	IDToken      string `json:"idToken"`
	RefreshToken string `json:"refreshToken"`
}

type UpdatePostInput struct {
	ID      int64  `json:"id"`
	Title   string `json:"title"`
	Content string `json:"content"`
}

type UpdatePostPayload struct {
	Post *Post `json:"post"`
}

type UpdateProfileInput struct {
	Name string `json:"name"`
}

type UpdateProfilePayload struct {
	Profile *Profile `json:"profile"`
}

type UpdateUserInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type UpdateUserPayload struct {
	User *User `json:"user"`
}

type User struct {
	ID        int64     `json:"id"`
	Email     string    `json:"email"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
}
