// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"github.com/ezio1119/fishapp-api-gateway/grpc/auth_grpc"
	"github.com/ezio1119/fishapp-api-gateway/grpc/chat_grpc"
	"github.com/ezio1119/fishapp-api-gateway/grpc/post_grpc"
	"github.com/ezio1119/fishapp-api-gateway/grpc/profile_grpc"
	"github.com/golang/protobuf/ptypes/timestamp"
)

type CreateApplyPostInput struct {
	PostID int64 `json:"postId"`
}

type CreateApplyPostPayload struct {
	ApplyPost *post_grpc.ApplyPost `json:"applyPost"`
}

type CreateMemberInput struct {
	RoomID int64 `json:"roomId"`
}

type CreateMemberPayload struct {
	Member *chat_grpc.Member `json:"member"`
}

type CreateMessageInput struct {
	Body   string `json:"body"`
	RoomID int64  `json:"roomId"`
}

type CreateMessagePayload struct {
	Message *chat_grpc.Message `json:"message"`
}

type CreatePostInput struct {
	Title             string              `json:"title"`
	Content           string              `json:"content"`
	FishingSpotTypeID int64               `json:"fishingSpotTypeId"`
	FishTypeIds       []int64             `json:"fishTypeIds"`
	PrefectureID      int64               `json:"prefectureId"`
	MeetingPlaceID    string              `json:"meetingPlaceId"`
	MeetingAt         timestamp.Timestamp `json:"meetingAt"`
	MaxApply          int64               `json:"maxApply"`
}

type CreatePostPayload struct {
	Post *post_grpc.Post `json:"post"`
}

type CreateProfileInput struct {
	Name         string           `json:"name"`
	Introduction string           `json:"introduction"`
	Sex          profile_grpc.Sex `json:"sex"`
}

type CreateProfilePayload struct {
	Profile *profile_grpc.Profile `json:"profile"`
}

type CreateRoomInput struct {
	PostID int64 `json:"postId"`
}

type CreateRoomPayload struct {
	Room *chat_grpc.Room `json:"room"`
}

type CreateUserInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type CreateUserPayload struct {
	User      *auth_grpc.User      `json:"user"`
	TokenPair *auth_grpc.TokenPair `json:"tokenPair"`
}

type DeleteApplyPostInput struct {
	ID int64 `json:"id"`
}

type DeleteApplyPostPayload struct {
	Success bool `json:"success"`
}

type DeleteMemberInput struct {
	RoomID int64 `json:"roomId"`
}

type DeleteMemberPayload struct {
	Success bool `json:"success"`
}

type DeletePostInput struct {
	ID int64 `json:"id"`
}

type DeletePostPayload struct {
	Success bool `json:"success"`
}

type LoginInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type LoginPayload struct {
	User      *auth_grpc.User      `json:"user"`
	TokenPair *auth_grpc.TokenPair `json:"tokenPair"`
}

type LogoutPayload struct {
	Success bool `json:"success"`
}

type MessageAddedInput struct {
	RoomID int64 `json:"roomId"`
}

type MessageAddedPayload struct {
	Message *chat_grpc.Message `json:"message"`
}

type PageInfo struct {
	HasNextPage bool    `json:"hasNextPage"`
	EndCursor   *string `json:"endCursor"`
}

type PostConnection struct {
	PageInfo *PageInfo         `json:"pageInfo"`
	Nodes    []*post_grpc.Post `json:"nodes"`
}

type PostsInput struct {
	PrefectureID      *int64                                 `json:"prefectureId"`
	FishingSpotTypeID *int64                                 `json:"fishingSpotTypeId"`
	FishTypeIds       []int64                                `json:"fishTypeIds"`
	MeetingAtFrom     *timestamp.Timestamp                   `json:"meetingAtFrom"`
	MeetingAtTo       *timestamp.Timestamp                   `json:"meetingAtTo"`
	CanApply          *bool                                  `json:"canApply"`
	OrderBy           *post_grpc.ListPostsReq_Filter_OrderBy `json:"orderBy"`
	SortBy            *post_grpc.ListPostsReq_Filter_SortBy  `json:"sortBy"`
	UserID            *int64                                 `json:"userId"`
}

type RefreshIDTokenPayload struct {
	TokenPair *auth_grpc.TokenPair `json:"tokenPair"`
}

type UpdatePostInput struct {
	ID                int64               `json:"id"`
	Title             string              `json:"title"`
	Content           string              `json:"content"`
	FishingSpotTypeID int64               `json:"fishingSpotTypeId"`
	FishTypeIds       []int64             `json:"fishTypeIds"`
	PrefectureID      int64               `json:"prefectureId"`
	MeetingPlaceID    string              `json:"meetingPlaceId"`
	MeetingAt         timestamp.Timestamp `json:"meetingAt"`
	MaxApply          int64               `json:"maxApply"`
}

type UpdatePostPayload struct {
	Post *post_grpc.Post `json:"post"`
}

type UpdateProfileInput struct {
	Name         string `json:"name"`
	Introduction string `json:"introduction"`
}

type UpdateProfilePayload struct {
	Profile *profile_grpc.Profile `json:"profile"`
}

type UpdateUserInput struct {
	Email       string `json:"email"`
	OldPassword string `json:"oldPassword"`
	Password    string `json:"password"`
}

type UpdateUserPayload struct {
	User *auth_grpc.User `json:"user"`
}
